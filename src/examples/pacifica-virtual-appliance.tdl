<template>
 <name>pacifica-virtual-appliance</name>
 <description>Pacifica CentOS Linux 5 Virtual Appliance x86_64 template</description>
 <os>
  <name>CentOS-5</name>
  <version>U8</version>
  <arch>x86_64</arch>
  <install type='url'>
<!--   <url>http://mscimager.emsl.pnl.gov/cobbler/ks_mirror/centos5.7-x86_64/</url>-->
<!--   <url>http://isoredirect.centos.org/centos/5.9/os/x86_64/</url>-->
   <url>http://vault.centos.org/5.8/os/x86_64/</url>
  </install>
 </os>
 <repositories>
  <repository name="10gen">
   <url>http://downloads-distro.mongodb.org/repo/redhat/os/x86_64</url>
   <signed>no</signed>
  </repository>
  <repository name="myemsl-devel-deps">
   <url>http://jenkins.emsl.pnl.gov/pacificarepos/epel-5-x86_64/</url>
   <signed>no</signed>
  </repository>
  <repository name="pgdg84">
   <url>http://yum.pgrpms.org/8.4/redhat/rhel-5-x86_64/</url>
<!--      <url>http://mscimager.emsl.pnl.gov/cobbler/repo_mirror/pgsql-8.4-rhel-5-x86_64/</url>-->
   <signed>no</signed>
  </repository>
  <repository name="epel">
   <url>http://download.fedoraproject.org/pub/epel/5/x86_64</url>-->
<!--   <url>http://mscimager.emsl.pnl.gov/cobbler/repo_mirror/epel-el5-x86_64/</url>-->
   <signed>no</signed>
  </repository>
  <repository name="ruby187-el5-x86_64">
<!--   <url>http://mscimager.emsl.pnl.gov/cobbler/repo_mirror/ruby187-el5-x86_64/</url>-->
   <url>http://centos.karan.org/el5/ruby187/x86_64</url>
   <signed>no</signed>
  </repository>
 </repositories>
 <files>
  <file name="/etc/xdg/autostart/pacifica-docs.desktop" type="raw">
[Desktop Entry]
Encoding=UTF-8
Name=Pacifica Docs
Comment=Display Pacifica Documentation
Icon=myemsluploaderstatus
Exec=firefox file:///usr/share/doc/myemsl-devel/vm.html
Terminal=false
Type=Application
Categories=
NoDisplay=true
X-GNOME-Autostart-Delay=60
  </file>
  <file name="/etc/sysconfig/network-scripts/ifcfg-eth0" type="raw">
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=dhcp
  </file>
  <file name="/sbin/pacifica_va_format_mount" type="raw">#!/bin/bash
cp -a /srv-preinit/* /srv/
mount --bind /srv/pgsql /var/lib/pgsql
/etc/init.d/postgresql restart
sleep 5
SESS=`dd if=/dev/random bs=1 count=128| base64 2>/dev/null | tr -d '\n'`
mkdir -p /srv/pacifica/uploader/auth/creds
sed "s:@SESS@:$SESS:g" MA\=\= > /srv/pacifica/uploader/auth/creds/MA\=\=
chmod 600 /srv/pacifica/uploader/auth/creds/MA\=\=
myemsldbadm -c "insert into myemsl.eus_auth(user_name, session_id) values('1', '$SESS');"
/etc/init.d/postgresql stop
umount /var/lib/pgsql
  </file>
  <file name="/root/pacifica_default_permissions" type="raw">#!/usr/bin/python

import myemsl.permission

psid = myemsl.permission.get_or_create_permission_set_id(['p'])
print psid
pgid = myemsl.permission.get_permission_group_id('DEFAULT', 'gov_pnnl_emsl_pacifica_generic_publication')
if pgid == None:
	pgid = myemsl.permission.create_permission_group('DEFAULT', 'gov_pnnl_emsl_pacifica_generic_publication')
if pgid != None:
	print pgid
	myemsl.permission.add_permission_group_member(pgid, 1)
	myemsl.permission.create_permission(pgid, 'gov_pnnl_emsl_pacifica_generic_publication', psid)
  </file>
  <file name="/etc/rc.local.ec2" type="raw">#!/bin/bash -x
if [ ! -d /root/.ssh ]; then
  mkdir -p /root/.ssh
  chmod 700 /root/.ssh
fi
myemsl_ec2_standalone_service_sync

  </file>
  <file name="/etc/modprobe.conf" type="raw">
alias scsi_hostadapter ata_piix
alias scsi_hostadapter1 virtio_blk
alias scsi_hostadapter2 ahci
  </file>
  <file name="/tmp/dbcreate.sh" type="raw">#!/usr/bin/expect -f
set force_conservative 0
if {$force_conservative} {
        set send_slow {1 .1}
        proc send {ignore arg} {
                sleep .1
                exp_send -s -- \$arg
        }
}
set timeout -1
spawn /usr/lib/myemsl/dbcreate.sh -r
match_max 100000
expect eof
  </file>
  <file name="/etc/slurm/slurm.conf" type="raw">
ControlMachine=localhost
ClusterName=localhost
AuthType=auth/munge
SelectType=select/cons_res
SelectTypeParameters=CR_CORE
PreemptType=preempt/partition_prio
PreemptMode=SUSPEND,GANG
NodeName=localhost Procs=1 State=DRAIN
PartitionName=local Priority=99 Nodes=localhost Default=YES Shared=YES
PartitionName=lopri Priority=10 Nodes=localhost Shared=YES
  </file>
  <file name="/etc/fuse.conf" type="raw">
user_allow_other

  </file>
  <file name="/etc/news/readers.conf" type="raw">
auth "read-write" {
    hosts: "localhost, 127.0.0.1,IP @IP@"
    default: "&lt;read-write>@myemsl"
}
access "read-write" {
     users: "&lt;read-write>@myemsl"
     read: "*"
     post: "local.myemsl.incoming.notifications"
}
  </file>
  <file name="/root/standalone.gui" type="raw">#!/bin/bash
mount -o remount,rw /
sed -i 's/^id:.*:initdefault:$/id:5:initdefault:/' /etc/inittab
mount -o remount,ro /
/root/standalone
  </file>
  <file name="/etc/httpd/conf.d/proxy.conf" type="raw">
ProxyRequests On
&lt;Proxy *>
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
&lt;/Proxy>
  </file>
  <file name="/root/standalone" type="raw">#!/bin/bash
mount -o remount,rw /
mount /boot
sed -i 's/console=tty.*//' /boot/grub/grub.conf
umount /boot
rm /etc/rc.local.ec2
rpm -e cloud-init
cat > /etc/rc.local.standalone &lt;&lt;"EOF"
myemslmount
myemsloutage -c
EOF
chmod +x /etc/rc.local.standalone
/sbin/chkconfig elasticsearch on
passwd &amp;&amp; rm -f /root/standalone
mount -o remount,ro /
reboot
  </file>
  <file name="/root/MA==" type="raw">Setting: insecure
Started!
Goin.
Redirecting to https://127.0.0.1/myemsl/services
1
Service: files=https://127.0.0.1/myemsl/files/
Service: cart=https://127.0.0.1/myemsl/api/2/cart/
Service: fileicon=https://127.0.0.1/myemsl/static/1/icons/
Service: testauth=https://127.0.0.1/myemsl/testauth/
Service: preallocate=https://127.0.0.1/myemsl/cgi-bin/preallocate
Service: query=https://127.0.0.1/myemsl/query/
Service: item=https://127.0.0.1/myemsl/item/
Service: preferences=https://127.0.0.1/myemsl/preferences/
Service: dmspath=https://127.0.0.1/myemsl/api/1/dmspath/
Service: logout=https://127.0.0.1/myemsl/logout/
Service: client=https://127.0.0.1/myemsl/client/
Service: cart_download=https://127.0.0.1/myemsl/cart/download/
Service: iteminfo=https://127.0.0.1/myemsl/iteminfo/
Service: admin_cart=https://127.0.0.1/myemsl/admin/cart/
URL: https://127.0.0.1/myemsl/testauth/
Kerberos: 0 res: 6
Gui Started. https://127.0.0.1/myemsl/testauth/
Set-Cookie: myemsl_session=@SESS@; domain=127.0.0.1; path=/
  </file>
  <file name="/sbin/pacifica_va_start" type="raw">#!/bin/bash
if [ ! -f /srv/pacifica_va_version ]
then
	echo 'Mount not in place. Not starting.'
	exit 1
fi
. /srv/pacifica_va_version
if [ "x$MAJOR" != "x1" ]
then
	echo 'Unknown mount version. Not starting.'
	exit 2
fi
#FIXME move bind mounts to a myemsl/mount.d script?
for x in pgsql elasticsearch myemsl pacifica mongo
do
	mount --bind /srv/$x /var/lib/$x
done
/etc/init.d/postgresql restart
/etc/init.d/httpd restart
/etc/init.d/innd restart
/etc/init.d/munge restart
/etc/init.d/mongod restart
/etc/init.d/pacificauploaderd restart
/etc/init.d/elasticsearch restart
/etc/init.d/myemsl_elasticsearch restart
  </file>
  <file name="/etc/rc.local.first.boot" type="raw">#!/bin/bash
sed -i 's/#[ \t]*\(noprealloc = true\)/\1/' /etc/mongod.conf
/etc/init.d/mongod restart
sleep 5
#FIXME probably should move this to build time.
/usr/libexec/pacifica/notification/init -n localhost -c rmds
/usr/libexec/pacifica/notification/init -n localhost -c fmds
/usr/libexec/pacifica/notification/init -n localhost -c tmds
/usr/libexec/pacifica/notification/init -n localhost -c jmds
test -f /usr/bin/system-config-display &amp;&amp; /usr/bin/system-config-display --reconfig --noui
/usr/libexec/myemsl/servergenkeys
/usr/libexec/myemsl/itemauthgenkeys
/usr/sbin/create-munge-key
IP=$(ifconfig eth0 | sed -n 's/.*inet addr:\([^ ]\+\).*/\1/p')
sed -i 's/@IP@/'$IP'/g' /etc/news/readers.conf
echo "listen_addresses = '0.0.0.0'" >> /var/lib/pgsql/data/postgresql.conf 
#echo bindaddress: $IP >> /etc/news/inn.conf
echo bindaddress: all >> /etc/news/inn.conf
rm -f /etc/rc.local.first.boot
  </file>
  <file name="/etc/rc.local" type="raw">#!/bin/bash -x
touch /var/lock/subsys/local
set -x
[ -x /etc/rc.local.first.boot ] &amp;&amp; /etc/rc.local.first.boot
if [ -x /etc/rc.local.ec2 ]
then
	/etc/rc.local.ec2
	export EC2=1
fi
setenforce permissive
/sbin/pacifica_va_start

if [ "x$EC2" != "x" ]
then
	myemslmount
	myemsloutage -c
	/etc/init.d/elasticsearch restart
fi
if [ -x /etc/rc.local.standalone ]
then
	/etc/rc.local.standalone
fi
echo done 
  </file>
  <file name="/root/setup.local.sh" type="raw">#!/bin/bash

set -xe

yum clean all

cp -f /usr/share/zoneinfo/America/Los_Angeles /etc/localtime 
sed -i 's/ZONE=.*/ZONE="America\/Los_Angles"/g' /etc/sysconfig/clock

TOREMOVE=`rpm -qa --queryformat '%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}\n' | grep 'i[36]86$'`
yum -y remove $TOREMOVE
sed -i 's#plugins=1#plugins=1\nexclude=*.i?86#' /etc/yum.conf
#sed -i 's#^baseurl=.*$#mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&amp;arch=$basearch#' /etc/yum.repos.d/epel.repo
#export http_proxy=

rpm --import /etc/pki/rpm-gpg/*

yum -y upgrade
yum -y install "@GNOME Desktop Environment" "@X Window System" \
           sqlite \
           myemsl-web-services-ssl myemsl-web-services-common myemsl-web-personinfo-ssl \
           myemsl-cartd myemsl-web-cart-ssl pacifica-web-basicauth \
           myemsl-web-ingestor-ssl myemsl-web-notify-ssl \
           myemsl-web-iteminfo-ssl \
           myemsl-web-query-raw-ssl myemsl-database myemsl-database-schema \
           myemsl-sumcheck \
           libbuhfsutil \
           postgresql-server vim-enhanced elinks expect screen \
           postgresql-devel gdb strace \
           pprof pymongo inn \
           gdm mercurial firefox myemsl-elasticsearch-sync \
           elasticsearch myemsl-web-elasticsearch-ssl \
           myemsl-web-item-ssl myemsl-archive-standalone mod_xsendfile alpine \
           myemsl-web-query-ssl \
           pacifica-devel-brand-ssl pacifica-devel-brand-common fuse \
           pacifica-auth-default-local pacifica-uploader pacifica-auth libpacificaauth-devel \
           pacifica-notification-common pacifica-notification-client pacifica-notification-server \
           pacifica-metadata-tmds pacifica-metadata-fmds pacifica-metadata-jmds pacifica-web-rmds-notification-ssl \
           mongo-10gen mongo-10gen-server cloud-init

ln -s /etc/xdg/Pacifica /usr/lib64/qt47/etc

/usr/sbin/adduser -G fuse svc-myemsl

echo "index.gateway.local.sync: -1" >> /etc/elasticsearch/elasticsearch.yml

chmod +x /tmp/dbcreate.sh
/tmp/dbcreate.sh

chkconfig munge off
chkconfig innd off
chkconfig elasticsearch off
chkconfig myemsl_elasticsearch off
chkconfig pacificauploaderd off

echo '%rhel 5' > /etc/rpm/macros.dist

sed -i 's:\(127.0.0.1/32[ \t]*\)ident:\1password:g' /var/lib/pgsql/data/pg_hba.conf
IP=$(ifconfig eth0 | sed -n 's/.*inet addr:\([^ ]\+\).*/\1/p')
cp -a /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.bak
echo 'host all all '$IP'/32 password' >> /var/lib/pgsql/data/pg_hba.conf
echo 'enabling: host all all '$IP'/32 password'
ifconfig
/etc/init.d/postgresql restart
myemsldbadm -c "insert into eus.users(person_id, network_id, email_address) values(1, 'svc-myemsl', 'svc-myemsl@nowhere.com');"
myemsldbadm -c "insert into eus.users(person_id, network_id, email_address) values(2, 'anon', 'anon@nowhere.com');"
chmod +x /root/pacifica_default_permissions
/root/pacifica_default_permissions
mv /var/lib/pgsql/data/pg_hba.conf.bak /var/lib/pgsql/data/pg_hba.conf
htpasswd -c -b /etc/myemsl/htpasswd anon ''
mkdir -p /srv/pacifica-publications/

/etc/init.d/innd start
sleep 2
/usr/lib/news/bin/ctlinnd newgroup local.myemsl.incoming.notifications
mv /etc/news/incoming.conf /etc/news/incoming.conf.orig
cat > /etc/news/incoming.conf &lt;&lt;ENOF
streaming:              true
max-connections:        8
ENOF
/etc/init.d/innd stop

mkdir -p /var/lib/pacifica/uploader/config
chmod 700 /var/lib/pacifica/uploader/config
chmod 755 /var/lib/pacifica/uploader
chmod 755 /var/lib/pacifica
cat > /var/lib/pacifica/uploader/config/MA==.json &lt;&lt;ENOF
{
	"Rules": [
		{
			"Name": "Publications",
			"Paths": [
				"/srv/pacifica-publications"
			],
			"StaticMetadata": [],
			"ExcludePatterns": [],
			"RenamePatterns": [],
			"MetadataPattern": [
				{
					"Pattern": "^/srv/pacifica-publications/(?P\u003cpublication\u003e.*)/.*",
					"Group": [
						{
							"Pattern": "publication",
							"Value": "gov_pnnl_emsl_pacifica_generic_publication"
						}
					]
				}
			],
			"AutoSubmit": true,
			"AutoDelete": false
		}
	]
}
ENOF

/usr/share/java/elasticsearch/bin/plugin -install mobz/elasticsearch-head

sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux

echo local.myemsl.incoming.notifications > /etc/news/subscriptions

sed -i 's/rhgb quiet/console=ttyS0/' /boot/grub/grub.conf
awk '{if(/^title/){if(!seen){print; seen=1}else{seen=2}} else if(seen==1){print}}' /boot/grub/grub.conf | sed 's/console=ttyS0.*/init=\/root\/standalone/' | sed 's/^title.*/title Standalone Configure/' > /tmp/grub.conf
awk '{if(/^title/){if(!seen){print; seen=1}else{seen=2}} else if(seen==1){print}}' /boot/grub/grub.conf | sed 's/console=ttyS0.*/init=\/root\/standalone.gui/' | sed 's/^title.*/title Standalone GUI Configure/' >> /tmp/grub.conf
cat /tmp/grub.conf >> /boot/grub/grub.conf
rm /tmp/grub.conf

mkdir -p /srv/myemsl-ingest
chown svc-myemsl.svc-myemsl /srv/myemsl-ingest

sed -i 's:ssl_verify_peer.*:ssl_verify_peer=False:' /etc/myemsl/general.ini
sed -i 's:ssl_verify_host.*:ssl_verify_host=False:' /etc/myemsl/general.ini

echo >> /etc/fuse.conf

#FIXME make this a plugin instead of an ugly hack.
sed -i 's:aged = "false":aged = "true":' /usr/lib/python2.4/site-packages/myemsl/elasticsearch/jsondumper.py

chmod +x /root/standalone
chmod +x /root/standalone.gui
chmod +x /etc/rc.local.first.boot
chmod +x /etc/rc.local.ec2
chmod +x /sbin/pacifica_va_start
chmod +x /sbin/pacifica_va_format_mount

chkconfig --level 35 mongod off
chkconfig --level 35 httpd on
chkconfig --level 35 munge on
chkconfig --level 35 postgresql off
chkconfig --level 35 innd on
chkconfig --level 35 elasticsearch off

/etc/init.d/mongod restart
sleep 2
/etc/init.d/postgresql stop
/etc/init.d/mongod stop

(echo MAJOR=1;echo MINOR=0) > /srv/pacifica_va_version
for x in pgsql elasticsearch myemsl pacifica mongo
do
	mv /var/lib/$x /srv
	mkdir /var/lib/$x
done
mv /srv /srv-preinit
mkdir /srv
  </file>
 </files>
 <commands>
   <command name='setup-rc-local'>
exec 1>/root/setup.log
exec 2>&amp;1
bash /root/setup.local.sh -x
echo $? > /root/setup.ok
exit $?
   </command>
 </commands>
</template>
